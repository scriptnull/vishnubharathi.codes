<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vishnu Bharathi</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vishnubharathi.codes/"/>
  <updated>2023-01-07T19:08:21.126Z</updated>
  <id>https://vishnubharathi.codes/</id>
  
  <author>
    <name>Vishnu Bharathi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Today&#39;s thought</title>
    <link href="https://vishnubharathi.codes/blog/todays-thought/"/>
    <id>https://vishnubharathi.codes/blog/todays-thought/</id>
    <published>2022-05-19T03:15:50.000Z</published>
    <updated>2023-01-07T19:08:21.126Z</updated>
    
    <content type="html"><![CDATA[<p>We are currently visiting my sisters (cousins) who were on school vacation in the past week and just got back to school this week. Last night one of my sisters came to me with a piece of paper and told me that she would like to practice a speech. It was a very small essay called ‚ÄúToday‚Äôs Thought‚Äù. It seems like an essay that is containing a thought would be read by a student every day in their morning school gathering where they do prayers. It was my sister‚Äôs chance to read out ‚ÄúToday‚Äôs thought‚Äù for today (hope she did great! I will get to know once gets home today.)</p><p>I asked my sister to read out and practice in front of us yesterday. It was great to listen to her - like a piece of wisdom that I seek for a long while yet unattained. Sometimes some thoughts are known to us, but maybe somewhere along the lines we forget or things change that we miss that viewpoint that made us good in the past. So, I would like to share ‚ÄúToday‚Äôs thought‚Äù that was read by her to us in this blog post.</p><blockquote><p>Today‚Äôs thought:</p><p>‚ÄúDon‚Äôt be afraid to start again. This time, you‚Äôre not starting from scratch. You‚Äôre starting from experience.‚Äù</p><p>Meaning - Failure is common in life and we need to start again. However, we should not fear to start again because this time, we have the support of our experience. Experience will make it easy for us to start and win again.</p><p>I repeat the thought:</p><p>‚ÄúDon‚Äôt be afraid to start again. This time, you‚Äôre not starting from scratch. You‚Äôre starting from experience.‚Äù</p></blockquote><p><img src="/images/todays-thought.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;We are currently visiting my sisters (cousins) who were on school vacation in the past week and just got back to school this week. Last n
      
    
    </summary>
    
    
      <category term="life" scheme="https://vishnubharathi.codes/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Exploring CUE</title>
    <link href="https://vishnubharathi.codes/blog/cuelang/"/>
    <id>https://vishnubharathi.codes/blog/cuelang/</id>
    <published>2022-04-16T19:45:31.000Z</published>
    <updated>2023-01-07T19:08:21.114Z</updated>
    
    <content type="html"><![CDATA[<p>When I was working on <a href="https://hasura.io/blog/what-we-learnt-by-migrating-from-circleci-to-buildkite">this project</a> at work, I wished to take a closer look at CUE. It seemed like a candidate for the project that we were undertaking (defining CI configs). But we didn‚Äôt end up choosing it at that time. We ended up using golang for writing our CI config - reasons: Turing completeness, familiarity for the team, good tooling, ease for other teams to understand, and a great deal of support from the compiler.</p><p>But tonight, I would like to take a closer look at CUE. The main reason for my curiosity is the recently released <a href="https://dagger.io">dagger</a> project. CUE seems to be at the center of this project. I hope I could understand the reason for that preference during my exploration here.</p><p>Also, I have been dabbling in this problem space for a long while. I know that the pain is real - That 2000 lines CI config written as YAML file, that 1800 lines <a href="https://json-schema.org">JSON schema</a> file - I have edited them all. They have all hurt me! It is good to see projects emerging that acknowledge that this problem exists.</p><h1 id="CUE-and-its-history"><a href="#CUE-and-its-history" class="headerlink" title="CUE and its history"></a>CUE and its history</h1><p>Time to borrow some quotes from CUE docs:</p><blockquote><p>CUE is an open-source data validation language and inference engine with its roots in logic programming. Although the language is not a general-purpose programming language, it has many applications, such as data validation, data templating, configuration, querying, code generation, and even scripting</p></blockquote><p>And here is the gist of where it came from:</p><blockquote><p>Although it is a very different language, the roots of CUE lie in GCL, the dominant configuration language in use at Google as of this writing. It was originally designed to configure Borg, the predecessor of Kubernetes.</p></blockquote><p>CUE has a set of philosophies and principles, which I hope to revisit at the end of this blog post to get a better idea of how they are practically applied.</p><h1 id="Use-cases"><a href="#Use-cases" class="headerlink" title="Use-cases"></a>Use-cases</h1><p>Starting by reading - <a href="https://cuelang.org/docs/usecases/">https://cuelang.org/docs/usecases/</a></p><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>The first line in docs - I love it &lt;3</p><blockquote><p>Arguably, validation should be the foremost task of any configuration language. Most configuration languages, however, focus on boilerplate removal. CUE is different in that it takes the validation first stance.</p></blockquote><p>One more point that I want to highlight is this:</p><blockquote><p>CUE basic operation merges configurations in a way that the outcome is always the same regardless of the order in which it is carried out (it is associative, commutative, and idempotent).</p></blockquote><p>This means that the order in which we write a config in the config file does not matter - pretty much like other config formats.</p><h3 id="Types"><a href="#Types" class="headerlink" title="Types"></a>Types</h3><p>One of the cool things that CUE is doing which we don‚Äôt see much in the wild is having ‚Äútypes‚Äù for the configuration. Like we mention types in a real programming language, we could use types in CUE to represent how the config should look like. I guess this in turn will be used by the tooling to validate the config.</p><p>Example config from the docs:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#Spec: &#123;</span><br><span class="line">  kind: string</span><br><span class="line"></span><br><span class="line">  name: &#123;</span><br><span class="line">    first:   !&#x3D;&quot;&quot;  &#x2F;&#x2F; must be specified and non-empty</span><br><span class="line">    middle?: !&#x3D;&quot;&quot;  &#x2F;&#x2F; optional, but must be non-empty when specified</span><br><span class="line">    last:    !&#x3D;&quot;&quot;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; The minimum must be strictly smaller than the maximum and vice versa.</span><br><span class="line">  minimum?: int &amp; &lt;maximum</span><br><span class="line">  maximum?: int &amp; &gt;minimum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now the above type called ‚ÄúSpec‚Äù could be used by the actual config like this</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">spec: #Spec</span><br><span class="line">spec: &#123;</span><br><span class="line">  knid: &quot;Homo Sapiens&quot; &#x2F;&#x2F; error, misspelled field</span><br><span class="line"></span><br><span class="line">  name: first: &quot;Jane&quot;</span><br><span class="line">  name: last:  &quot;Doe&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Boilerplate-and-Inheritance"><a href="#Boilerplate-and-Inheritance" class="headerlink" title="Boilerplate and Inheritance"></a>Boilerplate and Inheritance</h3><p>Copy pasting a hundred lines of config (boilerplate) to add or edit one line of config - done that ‚úîÔ∏è</p><p>Opening a random file with 2 lines of config and wondering ‚Äúwhat does this even do ü§î‚Äù - done that ‚úîÔ∏è (because the actual config that contains most of the config is placed in a different file and is <em>inherited</em> to this config file to reduce boilerplate)</p><p>CUE is a config language, so obviously there is a mechanism to avoid boilerplate but this point sounds particularly interesting:</p><blockquote><p>Like with other configuration languages, CUE can add complexity if values are organized to come from multiple places. However, as CUE disallows overrides, deep layerings are naturally prevented.</p></blockquote><p>CUE disallows overrides - want to see a practical example of this. Forgetting to override values in an inherited config file is a great way to do something bad in production systems; if the default value is not good enough, then forgetting to override that default value might easily cause trouble. For example default config setting of a container has a memory limit of 256MB but the application running in the container needs 512MB of memory to function properly; if the author of that application forgets to override, then that would impact the application when it is trying to run - often silently after deploying to prod :D  Does CUE help us combat this problem? I will continue reading for now and wait to know.</p><blockquote><p>Inheritance, is not commutative and idempotent in the general case. In other words, order matters. This makes it hard to track where values are coming from. This is not only true for humans, but also machines.</p></blockquote><h3 id="Other-config-languages"><a href="#Other-config-languages" class="headerlink" title="Other config languages"></a>Other config languages</h3><p>Some notes from the docs with comparison to other config languages:</p><blockquote><p>Like Jsonnet, CUE is a superset of JSON</p></blockquote><blockquote><p>CUE‚Äôs focus is data validation whereas Jsonnet focuses on data templating (boilerplate removal). Jsonnet was not designed with validation in mind.</p></blockquote><p>Here comes HCL (one of my favorite config languages):</p><blockquote><p>HCL has some striking similarities with GCL. But whether this was a coincidence or deliberate, it removes the core source of complexity of GCL: inheritance.</p></blockquote><blockquote><p>Also, whether the removal of inheritance was a coincidence or great insight, there is no construct given in return that one might need for larger scale configuration management. This means the use of HCL may hit a ceiling for medium to larger setups.</p></blockquote><h2 id="Data-Validation"><a href="#Data-Validation" class="headerlink" title="Data Validation"></a>Data Validation</h2><h3 id="Validating-YAML-and-JSON"><a href="#Validating-YAML-and-JSON" class="headerlink" title="Validating YAML and JSON"></a>Validating YAML and JSON</h3><p>one of the neat things about CUE is that it tries to play a bit nice with YAML and JSON whenever possible. A great example is how CUE could be used as a way to validate already existing YAML or JSON configurations.</p><p>I installed the <code>cue</code> tool on my machine at this point and thought of re-writing the example from docs to practice CUE.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ cue vet --help </span><br><span class="line">vet validates CUE and other data files</span><br><span class="line"></span><br><span class="line">By default, it will only validate if there are no errors.</span><br><span class="line">The -c validates that all regular fields are concrete.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Checking non-CUE files</span><br><span class="line"></span><br><span class="line">Vet can also check non-CUE files. The following file formats are</span><br><span class="line">currently supported:</span><br><span class="line"></span><br><span class="line">  Format       Extensions</span><br><span class="line">JSON       .json .jsonl .ndjson</span><br><span class="line">YAML       .yaml .yml</span><br><span class="line">TEXT       .txt  (validate a single string value)</span><br><span class="line"></span><br><span class="line">To activate this mode, the non-cue files must be explicitly mentioned on the</span><br><span class="line">command line. There must also be at least one CUE file to hold the constraints.</span><br></pre></td></tr></table></figure><p>Let us consider a YAML config that is absurd.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">min:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">max:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>Equivalent JSON file:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;min&quot;</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">&quot;max&quot;</span>: <span class="number">5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The above config is absurd because ‚Äúmin‚Äù is greater than ‚Äúmax‚Äù - what a contradiction! It seems like we could write a CUE file to check for these kinds of mistakes:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">min: *0 | number</span><br><span class="line">max: number &amp; &gt;min</span><br></pre></td></tr></table></figure><p>After writing the CUE check, we could vet it like this</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cue vet check.cue range.json range.yaml </span><br><span class="line">max: invalid value 5 (out of bound &gt;10):</span><br><span class="line">    .&#x2F;check.cue:2:15</span><br><span class="line">    .&#x2F;range.json:3:10</span><br></pre></td></tr></table></figure><p>The above command first validates the JSON file and throws the error at that point and STOPs without showing the error for YAML file (Why so? Why can‚Äôt it continue? - maybe I will discover it afterward)</p><p>Fixing the error in JSON file and retrying <code>cue vet</code> shows the problem in the YAML file.</p><h2 id="Schema-Definition"><a href="#Schema-Definition" class="headerlink" title="Schema Definition"></a>Schema Definition</h2><p>I have written JSON Schema in the past to define the structure of what the configuration should look like. It also helps in the validation of the configuration. JSON Schema becomes very complex at scale. When you are past some point, it becomes very difficult to digest it.</p><p>CUE feels more readable than JSON Schema in the first look so far.</p><p>If we write Schema in CUE, there is a way to check if <code>v2</code> of schema is backward-compatible with <code>v1</code> of the schema. <a href="https://cuelang.org/docs/usecases/datadef/#validating-backwards-compatibility">This example</a> in the docs describes it very neatly. I guess there is a potential to use this to enhance tooling for all of us here.</p><blockquote><p>JSON Schema and OpenAPI are purely data-driven data definition standards. OpenAPI originates from Swagger. As of version 3, OpenAPI is more or less a subset of JSON Schema. OpenAPI is used to define Kubernetes Custom Resource Definitions</p></blockquote><p>To know that an alternative for the above technologies is emerging gives me a fresh breeze to me.</p><h2 id="Code-generation-and-extraction"><a href="#Code-generation-and-extraction" class="headerlink" title="Code generation and extraction"></a>Code generation and extraction</h2><p>As of writing this, it seems like we could extract CUE definitions from Go code and protobuf definitions. The docs don‚Äôt tell exactly how yet - but we might discover it afterward, I guess.</p><p>Also, it seems like CUE could be used to annotate Go source code, and Go structs could be validated with the help of that. Cue at this point plays nicely with Go (because it is written in Go) and I am guessing that it will play nice with other languages based on how it is getting adopted by the community.</p><h2 id="Querying"><a href="#Querying" class="headerlink" title="Querying"></a>Querying</h2><p>Just realized that CUE could act as a query language. Let us say that we have a 1000 lines of config and we would like to extract a few configs that match a certain constraint, then CUE might be used for this. Example: Give me all config settings, whose values are numbers.</p><p>I think right now we will have to use CUE API (via Go code) to perform these kinds of querying, but the docs called for discussion of use-cases if you have one!</p><h2 id="Scripting"><a href="#Scripting" class="headerlink" title="Scripting"></a>Scripting</h2><p>It seems like CUE is providing a scripting layer for data. The docs are suggesting to refer <code>cue help cmd</code> for more information at this point. </p><p>After reading that help section, I learned that cue places itself as an alternative to make files. We could have a <code>cue</code> file with various commands which perform some task when we run <code>cue cmd &lt;that_command_name&gt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package project</span><br><span class="line"></span><br><span class="line">import &quot;tool&#x2F;exec&quot;</span><br><span class="line"></span><br><span class="line">command: hello: &#123;</span><br><span class="line">print: exec.Run &amp; &#123;</span><br><span class="line">cmd: &quot;echo hello&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>We could also inject data from the environment with something like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package project</span><br><span class="line"></span><br><span class="line">import &quot;tool&#x2F;exec&quot;</span><br><span class="line"></span><br><span class="line">who: *&quot;world&quot; | string @tag(who_arg)</span><br><span class="line"></span><br><span class="line">command: hello: &#123;</span><br><span class="line">print: exec.Run &amp; &#123;</span><br><span class="line">cmd: &quot;echo hello \(who)&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The expression tripped me up at first, but by re-reading it slowly I was able to understand it more clearly. It defines <code>who</code> to either be of value ‚Äúworld‚Äù OR a value of type string which is injected by <code>who_arg</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cue cmd hello</span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">$ cue cmd --inject who_arg&#x3D;humans hello</span><br><span class="line">hello humans</span><br></pre></td></tr></table></figure><h1 id="Integrations"><a href="#Integrations" class="headerlink" title="Integrations"></a>Integrations</h1><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><blockquote><p>CUE is a superset of JSON: any valid JSON file is a valid CUE file. There is not much more integration you can get than that. The main motivation to make it a superset was to promote familiarity.</p></blockquote><p>While we are here, I would like to point out a style in CUE for an equivalent JSON.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;first&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;second&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>is usually written in CUE using a folded form like this</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">first: second: key: &quot;value&quot;</span><br></pre></td></tr></table></figure><p>I ultimately checked the above line of CUE using the <code>cue export</code> command takes in CUE file and returns JSON/YAML.</p><p>Also, there is ‚Äúencoding/json‚Äù package in CUE‚Äôs scripting layer to manipulate JSON data in configuration.</p><h2 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h2><blockquote><p>Unlike with JSON, CUE is not a superset of YAML. One of the design goals of CUE was to be easily machine generatable and modifiable. The sensitivity to indentation and the lexical obscurity of the typing of tokens make YAML too bug prone for this purpose.</p></blockquote><p>That gave me a smile :D</p><p><code>cue vet</code> is your friend here. <code>encoding/yaml</code> package in the scripting layer to deal with YAML configs. I guess this is mainly to play nice with the existing ecosystem.</p><h2 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h2><p>Cue is written in Go and so has nice integration with it.</p><p>The first thing is if you need a package at the scripting layer, you could probably do so by writing a Go package. Builtin packages that are available inside a CUE file are listed here: <a href="https://pkg.go.dev/cuelang.org/go/pkg">https://pkg.go.dev/cuelang.org/go/pkg</a></p><p>It seems like we could also import definitions into CUE from other Go code bases using this command:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cue get go k8s.io&#x2F;api&#x2F;core&#x2F;v1</span><br></pre></td></tr></table></figure><br>This enables us to do the following:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import &quot;k8s.io&#x2F;api&#x2F;core&#x2F;v1&quot;</span><br><span class="line"></span><br><span class="line">services: [string]: v1.#Service</span><br></pre></td></tr></table></figure><p>I would recommend reading this <a href="https://cuelang.org/docs/integrations/go/">doc</a> for getting more idea of what is possible here. One thing that might come in handy is if you are looking to build applications that take CUE files as config, you could parse the config from your Go program easily via <a href="https://pkg.go.dev/cuelang.org/go/cue#Runtime">https://pkg.go.dev/cuelang.org/go/cue#Runtime</a></p><h2 id="Protobuf"><a href="#Protobuf" class="headerlink" title="Protobuf"></a>Protobuf</h2><p>I started learning about CUE tonight with the idea that I could avoid writing YAML and JSON Schema with the help of this. But to my surprise, CUE is trying to help me not write Protobuf (which I am not a fan of).</p><h1 id="Continue-reading"><a href="#Continue-reading" class="headerlink" title="Continue reading"></a>Continue reading</h1><p>I would like to stop this blog post here because it is already morning :D I am a bit disappointed that I couldn‚Äôt discuss the philosophy behind CUE here - they are awesome; go read it for yourself from <a href="https://cuelang.org/docs/about/#philosophy-and-principles">here</a>.</p><p>Apart from that, I am going to continue reading the docs to learn more about CUE. Once I am a bit comfortable with it, I would like to peek into dagger to see how they have integrated with CUE.</p><p>Also, CUE stands for ‚ÄúConfigure Unify Execute‚Äù.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;When I was working on &lt;a href=&quot;https://hasura.io/blog/what-we-learnt-by-migrating-from-circleci-to-buildkite&quot;&gt;this project&lt;/a&gt; at work, I
      
    
    </summary>
    
    
      <category term="programming" scheme="https://vishnubharathi.codes/tags/programming/"/>
    
      <category term="devops" scheme="https://vishnubharathi.codes/tags/devops/"/>
    
      <category term="cue" scheme="https://vishnubharathi.codes/tags/cue/"/>
    
  </entry>
  
  <entry>
    <title>Book notes: Hooked</title>
    <link href="https://vishnubharathi.codes/blog/book-notes-hooked/"/>
    <id>https://vishnubharathi.codes/blog/book-notes-hooked/</id>
    <published>2021-12-19T07:39:58.000Z</published>
    <updated>2023-01-07T19:08:21.114Z</updated>
    
    <content type="html"><![CDATA[<p>I recently had the chance to read through this book: <a href="https://www.goodreads.com/book/show/22668729-hooked">Hooked: How to Build Habit-Forming Products</a>. It is my attempt at bringing back the ‚Äúbuilder‚Äù spirit. I have worked on side projects that are literally whatever I like to do with my time at any given point - LOL :D</p><p>So, I thought I will learn how some good products are getting built. Apart from that, this book is about ‚Äúhabit-forming products‚Äù. By this time, I have realized that I have a ‚Äúhabit‚Äù of using certain things every day - I don‚Äôt even know how it became a habit, but it is a habit for me now (example: picking up the phone to check Twitter). So, I was curious to understand how I ended up like this and probably use the book in reverse-effect to control my habits (so that they don‚Äôt become an addiction).</p><p>Overall, I liked the book and I am going to have a ‚Äúworksheet‚Äù of things discussed in the book before I start building anything new. So, I am writing this blog post to revise the notes when it is needed. The entire post is mostly my ‚Äúnotes and highlights‚Äù from the book.</p><blockquote><p>As one of its findings, the study concluded that the more frequently the new behavior occurred, the stronger the habit became.</p></blockquote><blockquote><p>So Why haven‚Äôt more Google users switched to Bing? Habits keep users loyal</p></blockquote><blockquote><p>Sometimes a behavior does not occur as frequently as flossing or Googling, but it still becomes a habit. For an infrequent action to become a habit, the user must perceive a high degree of utility either from gaining pleasure or avoiding pain</p></blockquote><blockquote><p>A company can begin to determine its product‚Äôs habit-forming potential by plotting two factors: frequency (how often the behavior occurs) and perceived utility (how useful and rewarding the behavior is in the user‚Äôs mind over alternative solutions)</p></blockquote><blockquote><p>Just as failure has many causes, success too can be attributed to a variety of factors. However. one aspect is common to all successful innovations - they solve problems.</p></blockquote><blockquote><p>‚ÄúAre you building a vitamin or painkiller?‚Äù is a common, almost clich√©d question many investors ask founders eager to cash their first venture capital check.</p></blockquote><blockquote><p>A habit is when not doing an action causes a bit of discomfort</p></blockquote><p>The book introduces four parameters that we should think about while building new products. They are</p><ul><li>Trigger</li><li>Action</li><li>Variable Reward</li><li>Investment</li></ul><h2 id="Triggers"><a href="#Triggers" class="headerlink" title="Triggers"></a>Triggers</h2><p>A trigger is something that triggers the user to use your product. There are two kinds of triggers: External and Internal triggers.</p><p>External triggers:</p><ul><li>Paid Triggers: Advertising, search engine marketing, etc.</li><li>Earned Triggers: Favourable Press mentions, features on the app store, etc.</li><li>Relationship Triggers: Word of mouth, referrals, somebody shared on social media, etc.</li><li>Owned Triggers: Email newsletter to which user is subscribed, app icon on user‚Äôs iPhone screen, bookmarks, app notifications, etc.</li></ul><p>Internal triggers:<br>You can‚Äôt see, touch, or hear an internal trigger. It is completely internal to the user. They probably are triggered due to the feelings/emotions/state of mind of the user.</p><p>When do you use Instagram? FOMO - Fear Of Missing Out updates from your friends (fear is the emotion)</p><blockquote><p>Emotions, particularly negative ones, are powerful internal triggers and greatly influence our daily routines.</p></blockquote><blockquote><p>Our life is filled with tiny stressors and we‚Äôre usually unaware of our habitual reactions to these nagging issues.</p></blockquote><blockquote><p>The study demonstrated that people suffering from symptoms of depression used the Internet more. Why is that? One hypothesis is that those with depression experience negative emotions more frequently than the general population and seek relief by turning to technology to life their mood.</p></blockquote><blockquote><p>Jack Dorsey, co-founder of Twitter and Square, shared how his companies answer these important questions: ‚Äú[If] you want to build a product that is relevant to folks, you need to put yourself in their shoes and you need to write a story from their side. So, we spend a lot of time writing what‚Äôs called user narratives.</p><p>Dorsey goes on to describe how he tried to truly understand his user: ‚ÄúHe is in the middle of Chicago and they go to a coffee store ‚Ä¶ This is the experience they‚Äôre going to have. It reads like a play. It‚Äôs really, really beautiful. If you do that story well, then all of the prioritization, all of the product, all of the design, and all the coordination that you need to do with these products just falls out naturally because you can edit the story and everyone can relate to the story from all levels of an organization, engineers to operation to support to designers to the business side of the house.‚Äù</p></blockquote><blockquote><p>One method is to try asking the question ‚ÄúWhy? as many times as it takes to get to emotion. Usually, this will happen by the fifth why. This is a technique adapted from Toyota Production System, described by Taiichi Ohno as the ‚Äú5 Whys Method.‚Äù Ohno wrote that it was ‚Äúthe basis of Toyota‚Äôs scientific approach‚Ä¶ by repeating ‚Äòwhy?‚Äô fives times, the nature of the problem, as well as its solution, becomes clear‚Äù</p></blockquote><h2 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h2><blockquote><p>Fogg posits that there are three ingredients required to initiate any and all behaviors: (1) the user must have sufficient motivation; (2) the user must have the ability to complete the desired action; and (3) a trigger must be present to activate the behavior.</p><p>The Fogg Behaviour Model is represented in the formula B = MAT, which represents that a given behavior will occur when motivation, ability, and a trigger are present at the same time and insufficient degrees.</p></blockquote><blockquote><p>Evan Williams, co-founder of Blogger, Twitter, and Medium, echoes Hauptly‚Äôs formula for innovation when he describes his own approach to building three massively successful companies:</p><p>‚ÄúTake a human desire, preferably one that has been around for a really long time‚Ä¶ Identify that desire and use modern technology to take out steps.‚Äù</p></blockquote><p>The book introduces something called ‚ÄúFogg‚Äôs elements of simplicity‚Äù. These are the factors that influence a task‚Äôs difficulty. They are</p><ul><li>Time - how long it takes to complete an action.</li><li>Money - the fiscal cost of taking an action.</li><li>Physical effort - the amount of labor involved in taking the action.</li><li>Brain cycles - the level of mental effort and the focus required to take an action.</li><li>Social deviance - how accepted the behavior is by others</li><li>Non-routine - according to Fogg, ‚ÄúHow much the action matches or disrupts existing routines‚Äù</li></ul><blockquote><p>To increase the likelihood that a behavior will occur, Fogg instructs designers to focus on simplicity as a function of the user‚Äôs scarcest resource at that moment. In other words: Identify what the user is missing. What is making it difficult for the user to accomplish the desired action?</p><p>Is the user short on time? Is the behavior too expensive? Is the user exhausted after a long day of work? Is the product too difficult to understand? Is the user in a social context where the behavior could be perceived as inappropriate? Is the behavior simply so far removed from the user‚Äôs normal routine that its strangeness is off-putting?</p><p>These factors will differ by person and context: therefore, designers should ask, ‚ÄúWhat is the thing that is missing that would allow my users to proceed to the next step?‚Äù Designing with an eye toward simplifying the overall user experience reduces friction, removes obstacles, and helps push the user across Fogg‚Äôs action line.</p></blockquote><p>I have come across various brain ‚Äúbiases‚Äù. I felt it to be mostly psychological theory. But the book picked up four biases in particular and tries to explain with help of examples. (Found it to be practical)</p><ul><li>The Scarcity Effect - This is why Amazon shows ‚Äú1 out of 10 remaining in stock‚Äù</li><li>The Framing Effect - This is why you should care about the design of the box you package your product with.</li><li>The Anchoring Effect - ‚ÄúBuy one, get two‚Äù, ‚ÄúShops that have 20% off always‚Äù</li><li>The Endowed Progress Effect - This is why most sign-up flows show progress (Like Linkedin showing 80% complete to making you fill to becomes an ‚ÄúAll-star‚Äù profile‚Äù)</li></ul><blockquote><p>The appearance of scarcity affected their perception of value.</p></blockquote><blockquote><p>People often anchor to one piece of information when making a decision.</p></blockquote><blockquote><p>The study demonstrates the endowed progress effect, a phenomenon that increases motivation as people believe they are nearing a goal.</p></blockquote><h2 id="Variable-Reward"><a href="#Variable-Reward" class="headerlink" title="Variable Reward"></a>Variable Reward</h2><blockquote><p>Reward your users by solving a problem, reinforcing their motivation for the action taken in the previous phase.</p></blockquote><p>I think variable rewards pay for internal triggers. This section like many sections in the book is filled with research data and past experiments.</p><p>The variable reward comes in three types:</p><ul><li>Rewards of the Tribe: Facebook Likes and comments.Stack overflow upvotes of answers.</li><li>Rewards of the Hunt: Twitter‚Äôs feed and Pinterest‚Äôs endless scroll.</li><li>Rewards of the Self: Video games, Codecademy‚Äôs progress bar on skill development.</li></ul><blockquote><p>The magic words the researchers discovered? The phrase ‚ÄúBut you are free to accept or refuse‚Äù</p><p>The ‚Äúbut you are free‚Äù technique demonstrates how we are more likely to be persuaded to give when our ability to choose is reaffirmed. Not only was the effect observed during face-to-face interactions, but also over email. Although the research did not directly look at how products and services might use the technique, the study provides an important insight into how companies maintain or lose the user‚Äôs attention.‚Äù</p></blockquote><h2 id="Investment"><a href="#Investment" class="headerlink" title="Investment"></a>Investment</h2><blockquote><p>Unlike its competitors who sell preassembled merchandise, IKEA puts its customers to work. It turns out there‚Äôs a hidden benefit to making users invest physical effort in assembling the product - by asking customers to assemble their own furniture, Ariely believes they adopt an irrational love of the furniture they built, just like the test subjects did in the origami experiments. Business that leverage user effort confers higher value to their products simply because their users have put work into them. The users have invested in the products through their labor.</p></blockquote><blockquote><p>Studies reveal that our past is an excellent predictor of our future.</p></blockquote><p>The product has to provide ‚Äúvalue‚Äù to keep the user invested in the product. Some ways of providing value:</p><ul><li>Content: Spotify‚Äôs users consume the content it provides. Spotify generates ‚ÄúDiscover Weekly‚Äù based on content consumption which provides more value to the user who invested in listening on Spotify.</li><li>Data: Mint.com stores all the financial data of a user.</li><li>Followers: Investing in following the right people on Twitter improves the service for the user.</li><li>Reputation: Online marketplaces such as eBay, Upwork, Yelp, and Airbnb, people with negative scores are treated very differently from those with good reputations.</li><li>Skill: Investing time and effort into learning to use a product is a form of investment and stored value. Example: Learning Adobe Photoshop is an investment that adds design skills to the users as a result of which they are more invested in the product.</li></ul><h2 id="Habit-Testing"><a href="#Habit-Testing" class="headerlink" title="Habit Testing"></a>Habit Testing</h2><blockquote><p>For example, in its early days, Twitter discovered that once new users followed thirty other members, they hit a tipping point that dramatically increased the odds they would keep using the site.</p></blockquote><blockquote><p>Twitter used the insights gained from the previous step to modify its onboarding process, encouraging new users to immediately begin following others.</p></blockquote><h2 id="Bonus"><a href="#Bonus" class="headerlink" title="Bonus"></a>Bonus</h2><p>Throughout the book, I felt that the author applied the principles to the book itself. One thing that put a smile on my face was during the closing chapter of the book, the authors say this</p><blockquote><p>Also, it would mean so much to me if you could take a moment to review the book online, ‚Äúbut you are free to accept or refuse‚Äù</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I recently had the chance to read through this book: &lt;a href=&quot;https://www.goodreads.com/book/show/22668729-hooked&quot;&gt;Hooked: How to Build H
      
    
    </summary>
    
    
      <category term="books" scheme="https://vishnubharathi.codes/tags/books/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t be rude</title>
    <link href="https://vishnubharathi.codes/blog/rude/"/>
    <id>https://vishnubharathi.codes/blog/rude/</id>
    <published>2021-10-24T20:37:44.000Z</published>
    <updated>2023-01-07T19:08:21.122Z</updated>
    
    <content type="html"><![CDATA[<p>Hello! It‚Äôs me, posting here after a long time. I had been a bit busy recently and things are starting to free up. So here I am - slowly trying to do some non-work stuff in my free time like reading a book and writing on this blog.</p><p>Maybe I will try to write some interesting tech stuff that I have been doing in the past months - but not tonight. Tonight, I will try to offload some life events that had been weighing on me for a long time.</p><p>(disclaimer - if you are new to this blog: once in a while I tend to sit down on a sleepless night to capture some life events that happened to me. They don‚Äôt always convey something in particular. However, this post tries to convey something which is :point_down: )</p><blockquote><p>‚ÄúDon‚Äôt be rude to people‚Äù</p></blockquote><p>The life events mentioned earlier seem to be mostly at the ‚Äúworkplace‚Äù. To add more context, I have been working as a Software Engineer for about 6 years now and I should say that I have been lucky enough to encounter this uncomfortable situation a very small number of times. I would like to dedicate this post mainly to the engineers who just started their careers because it might be new to some of you. (well it was new to me - lol) That being said this post is universal - anybody is welcome to read and not be rude (obviously).</p><h2 id="Football"><a href="#Football" class="headerlink" title="Football"></a>Football</h2><p>This is a non-workplace event (so feel free to skip). But I really wanted to start with this because as far as I remember this is the first time I remember vividly someone being very rude to me.</p><p>I was in class 8 or 9 in school. I used to practice football every day for about one and half hours after school on the school ground. I did this routine for 2 or 3 years (some vacations included - I went in for summer camp at school). I was interested in this game. When possible I used to play with some friends in a playground near my house after getting back from school. Basically, I liked kicking things around.</p><p>It was the day of an inter-house match at School. There were 4 houses (groups) in our school - a student has a 1:1 relationship with a house. So, I belonged to a house. I went into the ground with my football boots (without knowing that would be the last official match of my never-started football career, haha).</p><p>There came familiar faces with whom I have practiced and a tall person (who seems to be the captain of our team). I never saw this captain in practice before and neither did he see me in practice. Very weird. So the reason for this weird situation seems to be that I was a days-scholar and he was a hosteller. The practice slot for days-scholar is early one and for hostellers it is flexible - some do early slots and some only attend the late-evening slots. This captain always attended the late-evening slots.</p><p>So, I was standing there on the ground. This captain comes to me and asks, ‚Äúwhat are you doing here?‚Äù. I said, ‚ÄúI am here to play the house match‚Äù. He turned angry out of the blue and immediately said, ‚Äúyou are not on the team‚Äù. wow, just like that - how easy. Ok here comes the actual rude stuff.</p><p>He said, ‚Äúhey small boy‚Äù (or some kind of equivalent - probably because he thinks I am from a smaller age group than him). He continues, ‚ÄúI have never seen you on the ground and you probably a days-scholar right? Run soon now, just jump off the compound wall and catch your school Van - it is probably starting to leave just now. You can catch it and be on time at home.‚Äù - I think my ears went beep for a moment - I couldn‚Äôt hear any other thing. I felt so much rudeness at that moment. He repeated it and went on to shower more rude stuff on the ground.</p><p>Then in a while, some of the people with who I have practiced (especially some ‚Äúhostellers‚Äù) came in. They all vouched for me saying that this person practices and is good at defense. The football coach came in and says to the captain, ‚ÄúHe seems pitiful, why not you include him in the match‚Äù. I respect that the coach asked to include me in the game, but I didn‚Äôt exactly want to there because I was ‚Äúpitiful‚Äù. This kicked a whole bunch of self-doubt in my young mind.</p><p>I was allowed to play the match. I sat in as a substitute in the first half and was on the ground for the second half. I got the chance to kick the ball one or two times during the match. The team that I was part of won the match.</p><p>I returned home that night. Though the victory was on the side I was part of, I couldn‚Äôt really be happy about playing there. All that kept repeating in mind was the things that captain said to me ‚Äújump off the wall and go home‚Äù. I wondered deeply that ‚Äúwow, people could be this rude‚Äù. If the captain were to ‚Äútalk‚Äù to me instead of stating rude stuff and not giving me chance to explain what is on my side, this story would not be present here.</p><p>Ok, pattern 1 on people who might behave rude: ‚ÄúThey don‚Äôt care to listen to what you have to say.‚Äù - so maybe ‚Äúlisten to people on what they have to say‚Äù if you don‚Äôt want to be rude. That was my learning from that event.</p><p>I quit playing football in school after that incident. But I still played street football where there is no coach or captain - lol (and no self-doubt). Just a plain field and a football with some good old friends near my house.</p><p>uff, damn this was heavy for me - I have never shared this moment with anyone and it‚Äôs been bugging me for a long time (more than 10 years). But here it is in the writing.</p><h2 id="Team-party"><a href="#Team-party" class="headerlink" title="Team party"></a>Team party</h2><p>I think it was 2016 or 17. I started working as an engineer for a startup. A lot of things were new to me at that point - especially the place and people. I started working in Bangalore and I came from a small town. I was getting adjusted to the new job and my circumstance there. There was a culture shift that I had to get used to. I had to learn and unlearn some things. I learned it the hard way.</p><p>At my place, we address most people as ‚Äúsir/madam‚Äù or ‚Äúbrother/sister‚Äù. We were taught that it is the right way to give respect by default. So, I always addressed people that way and I never had complaints about it. At work, I was informed that the norm at the workplace was to refer everybody by just their name. So, I did my best to unlearn my habit and addressed everybody with their name except one. (retrospect: my fault, I shouldn‚Äôt have made this exception)</p><p>The exception I made was to an engineer who spoke the native language as mine. I spoke in English to everybody in the company except this person. We spoke in our native language (Tamil) when we met each other in the bean bag spot. Due to my 25 years of experience in adding ‚Äúanna‚Äù (meaning brother in the native language) at the end or beginning of a sentence when talking with someone of higher age groups, my dialogues heavily included it. I was lonely and it felt home when talking to this person mostly because he was the only one to speak in the same native languages as me in a new world that I was part of. That person told me not to refer him as ‚Äúanna‚Äù but instead just use his name to address him. Well, my mind couldn‚Äôt accept it - I was trying to be respectful, and having that word is far more natural while trying to address someone like him back in my home place. But it wasn‚Äôt my home place - lol, that was the disconnect that I didn‚Äôt understand. I mostly continued using that word and he didn‚Äôt show any ‚Äústrong‚Äù opposition about it. Until‚Ä¶</p><p>There was a team party. (I think it was my first time stepping into what they call a ‚Äúpub‚Äù)</p><p>I don‚Äôt drink alcohol and I requested some fresh juice - lol (I still do this). I think I was given non-alcoholic drinks with a lot of sugar and fresh fruits mashed on top of it. Most of the team started drinking and it was long hours of discussion, play, and enjoyment.</p><p>I had the chance to sit near the person that I mentioned previously at some point in that event. I referred to them as a brother in my native language casually and that‚Äôs it. The person was on alcohol and maybe the reaction is due to that. They reacted back with what I felt to be my life‚Äôs rudest moment. He cursed me back with a bad word in our native language. He said something along the lines of ‚Äú(some really bad words), I have been asking you to stop calling me that why would you still address me like that‚Äù. We were surrounded by a lot of our teammates and luckily no one understood what he said.</p><p>I have never been called out with a bad/curse word in our native language before in my entire life. I never created problems or get myself into such situations. I felt bad that the person whom I was thinking close to home would do something like that to me. I didn‚Äôt respond to anything, I just sat there in shock and silently retired home after the event. I never spoke about that event with them afterward.</p><p>It was a great lesson for me. From that point onwards, I usually address people by their names. I never use {sir, madam, brother, sister}. Most of all, I stick with English while communicating at the workplace.</p><p>I wish I learned this lesson from a less-rude experience.</p><h2 id="Ticket-master"><a href="#Ticket-master" class="headerlink" title="Ticket master"></a>Ticket master</h2><p>I was at work. We were seeing a strange bug which was happening randomly. I think it was a pretty serious bug and I witnessed it twice. I had previously mentioned this bug to a senior engineer. When I witnessed the same bug for the second time, I ran taking my laptop to that senior engineer showing it. We started checking the logs and trying to make sense of the situation.</p><p>It was a fresh monday if I remember correctly. A very senior engineer (who was trying to be an aspiring engineering manager) was visiting our office at that time and it was the first time I was seeing them in our office. They came down here to work from the India office for a couple of weeks. They saw us debugging something and came in interrupting our debugging session.</p><p>He talked to me for the first time ever, ‚Äúwhat are you doing here?‚Äù. I said, ‚ÄúI might have run into some bug, which I am not sure if it is a bug that happens due to my local environment‚Ä¶.‚Äù</p><p>He asked, ‚ÄúDo we have a GitHub issue for it?‚Äù. I said, ‚ÄúNo! But before opening it, I wanted to confirm if it is a bug and I needed help from this person‚Äù.</p><p>In the last sentence that I said, they didn‚Äôt allow me to complete it. Right in the middle of what I was speaking, they again asked in a strong voice, ‚ÄúDo we have a GitHub issue for it?‚Äù.</p><p>I repeated ‚ÄúNo.‚Äù</p><p>They continued asking me, (in a strong tone): ‚ÄúThen why are you wasting everybody‚Äôs time? Did you know that you must create a GitHub issue for everything?‚Äù. I was trying to explain that ‚Äúit was not a waste of time to clarify a little bit before opening an issue,‚Ä¶‚Ä¶‚Äù.</p><p>They didn‚Äôt allow me to complete my sentences. They preached to me the process.</p><p>At that point, I felt speechless to talk back to them and I felt the same rudeness as the football match situation.</p><p>(at this point, I guess everybody in the office was looking at us and my eyes were filled with tears)</p><p>I returned to my desk, silently.</p><p>See the pattern here, in both situations: The rudeness is mostly due to some person choosing not to listen to some other person and care to explain back them in a peaceful way.</p><h2 id="Laptop"><a href="#Laptop" class="headerlink" title="Laptop"></a>Laptop</h2><p>I am a bit emotionally attached to machines :D which mainly includes computing devices that I use every day, like my laptop. (call me whatever, but I love the devices that help me to be productive)</p><p>I was working at a place where you could BYOD (bring your own device). Well, this was more of an MBYOD situation (Must bring your own device) situation. The startup didn‚Äôt have enough funds to buy laptops for the engineers so everyone had to use their laptop.</p><p>I didn‚Äôt exactly have my laptop when joining this company. What I had was a laptop with Windows installed, which was bought recently for my brother (cousin) - kind of like a graduation gift from me to him. I explained my situation to my brother and he was nice enough to spare me his new laptop so that I could use it for a month or two to get a paycheck and buy a laptop for me.</p><p>It was stressful times. I had a lot of commitments and I wasn‚Äôt able to buy a new machine for about 6 months. I feel sorry for getting myself into that situation. But I had no choice but to use the laptop that I got as a gift for my brother for work. I think it was Lenovo IdeaPad 145s. During that time, I was trying to be careful to give the laptop like a new one to my brother. So, I didn‚Äôt remove Windows 10 and install Linux as I would do usually. I didn‚Äôt install much software. I want to be minimal and was planning for a reset before giving him the laptop.</p><p>That is the reason why I kept using Ideapad with Windows at work then. I was able to do the tasks at hand mostly by spinning up a Linux VM on the cloud and using a basic code editor.</p><p>My peer engineers in that office were mostly using Thinkpads, XPS, MacBooks, etc. (lucky for them that they were able to afford it on their own. Poor me, haha.)</p><p>There was this one engineer to whom I had approached about doubt, I guess. They sounded very brilliant with a lot of subject matter expertise. They were trying to use my laptop. Apparently, they were a ThinkPad fan and they started a discussion on how great ThinkPad was with some other ThinkPad fan who was sitting near me - while there was an I/O delay on my laptop. I guess they pressed a bunch of keys and the IdeaPad didn‚Äôt respond quickly as they expected.</p><p>Suddenly this brilliant engineer informed me that my IdeaPad is ‚Äúpiece of s*%t‚Äù and more heavy words. I felt bad about it. Their words sounded like judging me to be a stupid person for using IdeaPad and Windows. I tried explaining to them that this was a spare machine and I am looking forward to getting a machine of my own. They didn‚Äôt seem to care and they just walked away in the middle of the conversation.</p><p>I am ok with the ‚Äúyour laptop is not cool‚Äù conversation, but I wish that it was not rude. Maybe all that is needed to make this situation non-rude were these:</p><ol><li>avoid curse words</li><li>ask politely why I preferred this hardware</li><li>listen to what I had to tell for 2 minutes</li></ol><h2 id="Thanks-for-listening"><a href="#Thanks-for-listening" class="headerlink" title="Thanks for listening"></a>Thanks for listening</h2><p>Not sure if somebody read this long post till here but if you have read it so far I want to thank you for listening to me. Because that is step 1 of not being rude to somebody.</p><p>I am sorry if I have been rude to you in some way in the past. I try very hard to be not rude to anyone. If you feel I have behaved rudely anytime, feel free to talk to me about it. I will ask a polite sorry to you and correct myself. I deeply care about you and our friendship.</p><p>A special sorry to everyone who had been rude to me and found a spot on this blog post. You should probably forget that you read this, just like the way I try to forget the rude moments. I have been quite successful in forgetting bad moments. How do I say, because most of this post is an approximation of what I remember from that rude moment. I forgot most of the bad stuff.</p><p>One more thing is, some of these events might not seem rude to someone reading this. But I cried or almost cried in all the above situations. Remember the cultural gaps and workplace diversity. The best we can do is be empathetic to everybody and try respecting what a person might be going through. I wish that no one has to go through this bad feeling of ‚Äúrudeness‚Äù especially at the workplace.</p><h2 id="Takeaways"><a href="#Takeaways" class="headerlink" title="Takeaways"></a>Takeaways</h2><ol><li>Try not to be rude.</li><li>Try hard not to be rude.</li><li>Try listening to people and treating them in a good way.</li><li>Avoid bad/curse words.</li><li>Apologize if you feel that you had been rude to somebody in some way.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hello! It‚Äôs me, posting here after a long time. I had been a bit busy recently and things are starting to free up. So here I am - slowly 
      
    
    </summary>
    
    
      <category term="career advice" scheme="https://vishnubharathi.codes/tags/career-advice/"/>
    
      <category term="life" scheme="https://vishnubharathi.codes/tags/life/"/>
    
      <category term="rant" scheme="https://vishnubharathi.codes/tags/rant/"/>
    
  </entry>
  
  <entry>
    <title>FOIR</title>
    <link href="https://vishnubharathi.codes/blog/foir/"/>
    <id>https://vishnubharathi.codes/blog/foir/</id>
    <published>2021-06-09T01:05:14.000Z</published>
    <updated>2023-01-07T19:08:21.118Z</updated>
    
    <content type="html"><![CDATA[<p>Good morning! (It‚Äôs 06:35 here) I happened to pick up a book about personal finance and read through a few pages of it in the past hour.</p><p>I have always felt to be lacking in knowledge about money. So, this is just my attempt at getting better at it a little bit.</p><p>My limited knowledge on personal finance is mostly by reading a few chapters in <a href="https://zerodha.com/varsity/">Zerodha Varsity</a> (amazing resource, thanks to the people creating it). This time, I have picked up this book called <a href="https://www.goodreads.com/book/show/40499078-let-s-talk-money">Let‚Äôs talk money</a>. I picked it mostly because I somehow got this book recommendation from a trusted source and the book deals with money in INR (Indian rupee) - makes sure that things discussed in the book are applicable in India.</p><p>So what is this blog post about?</p><p>well, I am planning to note down one or two things that I find interesting about personal finance here. So, in the attempt of that - I will start.</p><p>I learned something that I am going to describe below just by reading the preface of the book. LOL, the book is starting to pay off already?</p><p>It is this concept called FOIR. It stands for <em>Fixed Obligations to Income Ratio</em>.</p><p>I think this is a very good place to start evaluating how we are doing financially. Fixed obligation - is the fixed installments of money that you must be paying every month. Example: EMIs of bank loans. If we ratio that to the monthly income, then boom! we have a number that could tell how a person is doing financially now.</p><p>Let‚Äôs take the math-y approach and start with the formula.</p><p>FOIR = total monthly EMIs / monthly income</p><p>If a person is earning 1,00,000 INR per month and they are just paying an EMI of 30,000 INR, then their FOIR is 30%</p><p>The book‚Äôs author says that a FOIR of 30% is healthy for an individual.</p><p>Something interesting happened while I googled FOIR to copy-paste the full form of FOIR (haha, I don‚Äôt want to be embarrassed for spelling ‚Äúobligations‚Äù wrongly)</p><p>Ok, here is the interesting fact: FOIR is being used by banks to decide loan eligibility for an individual.</p><p>So, it seems like the banks expect a FOIR of less than 50% for a person to be eligible for a loan. (as simple as it is!)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Good morning! (It‚Äôs 06:35 here) I happened to pick up a book about personal finance and read through a few pages of it in the past hour.&lt;
      
    
    </summary>
    
    
      <category term="personal finance" scheme="https://vishnubharathi.codes/tags/personal-finance/"/>
    
  </entry>
  
</feed>
